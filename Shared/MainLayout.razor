@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IConfiguration Configuration

<MudThemeProvider Theme="_themeManager.Theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="4">
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
          
        <MudIcon Icon="@Icons.Custom.Brands.Google" Size="Size.Large" />
        <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Size="Size.Large" />
          
            @*<img src="Images/AEI_Logo_2.png" width="100px" />*@


        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs">
            <MudText Typo="Typo.h6" Class="ml-1">Warehouse Management System</MudText>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
       
        <MudIcon Icon="@Icons.Custom.Brands.Google" Size="Size.Medium" />
        <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Size="Size.Medium" />
        <MudText Typo="Typo.button" Class="ml-1">WMS</MudText>
        
            @*<img src="Images/AEI_Logo_2.png" width="50px" />*@


        </MudHidden>
        <MudAppBarSpacer />
        <ChooseLanguage />

        <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit" OnClick="@((e) => DarkMode())" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="25" ClipMode="_themeManager.DrawerClipMode">
        <MudDrawerHeader>
            <div class="d-flex justify-center mb-1">
                <img src="Images/AEI_Logo_2.png" width="100px" />
            </div>
            @*
        <MudDrawerContainer>
            <div class="d-flex justify-center mb-1">
                <img src="Images/AEI_Logo_2.png" width="100px" />
            </div>
            <MudText Color="Color.Primary" Align="Align.Center">WE AUTOMATE YOUR INTRALOGISTICS</MudText>
        </MudDrawerContainer>
            *@


            @*
        <MudDrawerContainer>
        <MudText Typo="Typo.subtitle2" Color="Color.Primary" Align="Align.Center">WE AUTOMATE YOUR INTRALOGISTICS</MudText>
        </MudDrawerContainer>
            *@
            @*
        <MudCardContent>
        <div class="d-flex justify-center mb-1">
            <img src="Images/AEI_Logo_2.png" width="100px" />
        </div>
        <MudText Typo="Typo.subtitle2" Color="Color.Primary" Align="Align.Center">WE AUTOMATE YOUR INTRALOGISTICS</MudText>
        </MudCardContent>
            *@
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudToolBar DisableGutters="true">
                <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" OnClick="@((e) => DrawerToggle())" Class="ml-3" />

                <MudSpacer />
                <MudButton Variant="Variant.Text" Link="https://aei-solution.com/" Color="Color.Primary" >AEI Solution</MudButton>
            </MudToolBar>
        </MudHidden>
        <MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
            @Body
        </MudContainer>    
    </MudMainContent>
</MudLayout>

@code
{

    private ThemeManagerTheme _themeManager = new ThemeManagerTheme();
    public bool _drawerOpen = true;
    public bool _themeManagerOpen = false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void OpenThemeManager(bool value)
    {
        _themeManagerOpen = value;
    }

    void UpdateTheme(ThemeManagerTheme value)
    {
        _themeManager = value;
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        currentTheme = defaultTheme;
        _themeManager.Theme = currentTheme;
        _themeManager.DrawerClipMode = DrawerClipMode.Docked;
        _themeManager.FontFamily = "Roboto";
        _themeManager.DefaultBorderRadius = 3;
        // _themeManager.AppBarElevation = 4;
        // _themeManager.DrawerElevation = 25;

        cultures = Configuration.GetSection("Cultures")
       .GetChildren().ToDictionary(x => x.Key, x => x.Value);

        StateHasChanged();
    }

    #region Theme

    void DarkMode()
    {
        if (currentTheme == defaultTheme)
        {
            currentTheme = darkTheme;
        }
        else
        {
            currentTheme = defaultTheme;
        }
        _themeManager.Theme = currentTheme;
    }

    MudTheme currentTheme = new MudTheme();
    MudTheme defaultTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Primary = "#1E88E5",
            AppbarBackground = "#D32F2F", //AppbarBackground = "#1E88E5",
            Background = Colors.Grey.Lighten5,
            DrawerBackground = "#FFF",
            DrawerText = "rgba(0,0,0, 0.7)",
            Success = "#007E33"
        },
        Typography = DefaultTypography,
        LayoutProperties = DefaultLayoutProperties
    };

    MudTheme darkTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Primary = "#1E88E5",
            Success = "#007E33",
            Black = "#27272f",
            Background = "#32333d",
            BackgroundGrey = "#27272f",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#373740",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = "rgba(255,255,255, 0.70)",
            TextSecondary = "rgba(255,255,255, 0.50)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            DrawerIcon = "rgba(255,255,255, 0.50)"
        },
        Typography = DefaultTypography,
        LayoutProperties = DefaultLayoutProperties
    };

    private static Typography DefaultTypography = new Typography()
    {
        Default = new Default()
        {
            FontFamily = new[] { "Montserrat", "Helvetica", "Arial", "sans-serif" },
            FontSize = ".875rem",
            FontWeight = 400,
            LineHeight = 1.43,
            LetterSpacing = ".01071em"
        },
        H1 = new H1()
        {
            FontFamily = new[] { "Montserrat", "Helvetica", "Arial", "sans-serif" },
            FontSize = "6rem",
            FontWeight = 300,
            LineHeight = 1.167,
            LetterSpacing = "-.01562em"
        },
        H2 = new H2()
        {
            FontFamily = new[] { "Montserrat", "Helvetica", "Arial", "sans-serif" },
            FontSize = "3.75rem",
            FontWeight = 300,
            LineHeight = 1.2,
            LetterSpacing = "-.00833em"
        },
        H3 = new H3()
        {
            FontFamily = new[] { "Montserrat", "Helvetica", "Arial", "sans-serif" },
            FontSize = "3rem",
            FontWeight = 400,
            LineHeight = 1.167,
            LetterSpacing = "0"
        },
        H4 = new H4()
        {
            FontFamily = new[] { "Montserrat", "Helvetica", "Arial", "sans-serif" },
            FontSize = "2.125rem",
            FontWeight = 400,
            LineHeight = 1.235,
            LetterSpacing = ".00735em"
        },
        H5 = new H5()
        {
            FontFamily = new[] { "Montserrat", "Helvetica", "Arial", "sans-serif" },
            FontSize = "1.5rem",
            FontWeight = 400,
            LineHeight = 1.334,
            LetterSpacing = "0"
        },
        H6 = new H6()
        {
            FontFamily = new[] { "Montserrat", "Helvetica", "Arial", "sans-serif" },
            FontSize = "1.25rem",
            FontWeight = 400,
            LineHeight = 1.6,
            LetterSpacing = ".0075em"
        },
        Button = new Button()
        {
            FontFamily = new[] { "Montserrat", "Helvetica", "Arial", "sans-serif" },
            FontSize = ".875rem",
            FontWeight = 500,
            LineHeight = 1.75,
            LetterSpacing = ".02857em"
        },
        Body1 = new Body1()
        {
            FontFamily = new[] { "Montserrat", "Helvetica", "Arial", "sans-serif" },
            FontSize = "1rem",
            FontWeight = 400,
            LineHeight = 1.5,
            LetterSpacing = ".00938em"
        },
        Body2 = new Body2()
        {
            FontFamily = new[] { "Montserrat", "Helvetica", "Arial", "sans-serif" },
            FontSize = ".875rem",
            FontWeight = 400,
            LineHeight = 1.43,
            LetterSpacing = ".01071em"
        },
        Caption = new Caption()
        {
            FontFamily = new[] { "Montserrat", "Helvetica", "Arial", "sans-serif" },
            FontSize = ".75rem",
            FontWeight = 400,
            LineHeight = 1.66,
            LetterSpacing = ".03333em"
        },
        Subtitle2 = new Subtitle2()
        {
            FontFamily = new[] { "Montserrat", "Helvetica", "Arial", "sans-serif" },
            FontSize = ".875rem",
            FontWeight = 500,
            LineHeight = 1.57,
            LetterSpacing = ".00714em"
        }
    };

    private static LayoutProperties DefaultLayoutProperties = new LayoutProperties()
    {
        DefaultBorderRadius = "3px"
    };

    #endregion

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
{
        new BreadcrumbItem("Admin", href: "#"),
        new BreadcrumbItem("Administrator", href: "#"),
    };


    private Dictionary<string, string> cultures;


   



   


}

@page "/"
@page "/pages/authentication/login"
@layout LoginLayout
@using GoWMS.Server.Data;
@using GoWMS.Server.Controllers
@using NETCore.Encrypt;

@inject IJSRuntime JSRunTime
@using System.Security.Claims
@using Microsoft.Extensions.Configuration
@using GoWMS.Server.Models;
@inject IConfiguration Configuration
@inject UserServices ObjUserService
@inject ISnackbar Snackbar

@inject NavigationManager navigationManager

<MudText Typo="Typo.h4" GutterBottom="true">Sign In to GoWMS</MudText>

<MudText>Don't have an account? <MudLink Href="/pages/authentication/register" Color="Color.Error">Sign Up</MudLink></MudText>

<MudTextField T="string" @bind-Value="@Userword" Label="UserID" Variant="Variant.Outlined" Class="my-6"></MudTextField>

<MudTextField @bind-Value="@Password" Label="Password" Variant="Variant.Outlined" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="TogglePasswordVisibility" />

<br />


<MudButton Variant="Variant.Filled" Color="Color.Error" Size="Size.Large" FullWidth="true" OnClick="@btnLogin_Click">Sign In</MudButton>

@*
    <MudButton Variant="Variant.Filled" Color="Color.Primary" Link="/dashboard" Size="Size.Large" FullWidth="true">Sign In</MudButton>
*@

@code {
    string Password { get; set; } = "@ei0u2020";
    string Userword { get; set; } = "guest@gowms.com";
    private IEnumerable<Userinfo> UserElements = new List<Userinfo>();

    bool PasswordVisibility;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void TogglePasswordVisibility()
    {
        @if (PasswordVisibility)
        {
            PasswordVisibility = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            PasswordVisibility = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }


    private async Task btnLogin_Click()
    {

        if (Password.Length > 0 && Userword.Length > 0)
        {
            var key = Configuration.GetSection("Appkey")["Pass"].ToString();
            //var encrypted = Security.EncryptString(Password, key);
            var encrypted = EncryptProvider.DESEncrypt(Password, key);

            UserElements = await Task.Run(() => ObjUserService.GetUser(Userword, encrypted));

            if (UserElements.Count() > 0)
            {
             
                var grouid = UserElements.Select(x => x.Usgid).FirstOrDefault();

                var result1 = UserElements.Where(i => i.Usgid == grouid.Value).FirstOrDefault(); // = 0

                var authModule = await JSRunTime.InvokeAsync<IJSObjectReference>("import", "./js/auth.js");
                await authModule.InvokeVoidAsync("SignIn", Userword, encrypted, grouid.ToString(), result1.Usid.ToString(), "/gowms");
                var authModules = authModule;
            }
            else
            {
                Snackbar.Add("The " + Userword + " user was not found in the system.", Severity.Error);
            }
        }
        else
        {
            Snackbar.Add("Please Enter User and Password", Severity.Error);
        }


        //navigationManager.NavigateTo("/dashboard" );

        //SetUser();

    }

    private async void btnLogout_Click()
    {
        var authModule = await JSRunTime.InvokeAsync<IJSObjectReference>("import", "./js/auth.js");
        await authModule.InvokeVoidAsync("SignOut", "/");
    }

    void SetUser()
    {
        //GoWMS.Server.Data.CurrentUserName = Userword;
        //GoWMS.Server.Data.VarGlobals.

        VarGlobals.CurrentUserName = Userword;

        /*
        Action<VarGlobals> mduOptions = (opt =>
        {
            opt.CurrentUserName = Userword;
        });
        */
        var srcString = Password;
        var key = "czsqO+DxnA1EcyurkKdllA==";

        var encrypted = EncryptProvider.DESEncrypt(srcString, key);
        var decrypted = EncryptProvider.DESDecrypt(encrypted, key);

        VarGlobals.User.UserID = 1;
        VarGlobals.User.UserName = Userword;
        VarGlobals.User.DeepID = 1;
        VarGlobals.User.GroupID = 1;

        navigationManager.NavigateTo("/gowms");

        // navigationManager.NavigateTo("/");

        //navigationManager.NavigateTo("");

    }
}

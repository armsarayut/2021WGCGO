@page "/wgc-bookingnoteselect"
@using GoWMS.Server.Data
@using GoWMS.Server.Controllers
@using GoWMS.Server.Models
@using GoWMS.Server.Models.Wgc
@using System.Globalization
@using System.Reflection
@using System.Text.Json

@inject WgcService ObjErpService
@inject ISnackbar Snackbar
@inject ErpApiService ObjApiService
@inject IStringLocalizer<WgcBookingnotePage> L

<style>
    .mud-table-cell-custom-group {
        font-weight: 500;
    }

    .mud-table-cell-custom-group-footer {
        padding-bottom: 50px;
        text-align: left;
    }
</style>


@if (Elements == null)
{
    // <p><em>Loading...</em></p>
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
}
else
{
<MudText Typo="Typo.h6" Color="Color.Primary"> @L["pageHeader"] </MudText>


    <MudTable Hover="@hover"
              Breakpoint="Breakpoint.Sm"
              Height="@(fixed_header || fixed_footer ?"600px":"")"
              MultiSelection=@_multiSelect
              FixedHeader="@fixed_header"
              Items="@Elements"
              GroupBy="@_groupDefinition"
              GroupHeaderStyle="background-color:var(--mud-palette-background-white)"
              GroupFooterClass="mb-4"
              Dense="@dense"
              FixedFooter="@fixed_footer"
              Bordered="@bordered"
              Striped="@striped"
              Filter="new Func<BOOKING_NOTE_ITEMS,bool>(FilterFunc)" @bind-SelectedItems="selectedItems">
        <ToolBarContent>

            <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Save" Style="background-color: darkblue; color: white; width: 120px; height: 30px;" OnClick=@SelectOrder>
                StartPick
            </MudButton>

            @*
                <MudButton OnClick="DownloadExcelDocument" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.FileDownload" Style="background-color: mediumseagreen; color: white; width: 80px; height: 30px;">
                    Excel
                </MudButton>
                <MudButton OnClick="DownloadPdfDocument" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.FileDownload" Style="background-color: orangered; color: white; width: 80px; height: 30px;">
                    PDF
                </MudButton>
            *@
            <MudToolBarSpacer />
            <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>

        <ColGroup>
            @if (_multiSelect)
                {
                <col style="width: 60px;" />
                }
            @if (_groupDefinition.Expandable)
                {
                <col style="width: 60px;" />
                }
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
        </ColGroup>
        <HeaderContent>
            <MudTh>@L["SoNo"]</MudTh>
            <MudTh>@L["ItemCode"]</MudTh>
            <MudTh>@L["Customer"]</MudTh>
            <MudTh>@L["Seq"]</MudTh>
            <MudTh>@L["LotNo"]</MudTh>
            <MudTh>@L["BatchNo"]</MudTh>
            <MudTh>@L["Packeting"]</MudTh>
            <MudTh>@L["Qty"]</MudTh>
            <MudTh>@L["Unit"]</MudTh>
            <MudTh>@L["PalletGo"]</MudTh>
        </HeaderContent>
        <GroupHeaderTemplate>
            <MudTh Class="mud-table-cell-custom-group" colspan="5">@($"{context.GroupName}: {context.Key}")</MudTh>
        </GroupHeaderTemplate>
        <RowTemplate>
            <MudTd DataLabel="SoNo">@context.SO_NO</MudTd>
            <MudTd DataLabel="ItemCode">@context.ITEM_CODE</MudTd>
            <MudTd DataLabel="Customer">@context.CUSTOMER_CODE</MudTd>
            <MudTd DataLabel="Seq">@context.DN_SEQ</MudTd>
            <MudTd DataLabel="LotNo">@context.LOT_NO</MudTd>
            <MudTd DataLabel="BatchNo">@context.BATCH_NO</MudTd>
            <MudTd DataLabel="Packeting">@context.PACKETING_CODE</MudTd>
            <MudTd DataLabel="Qty">@context.DN_QTY</MudTd>
            <MudTd DataLabel="Unit">@context.DN_UM</MudTd>
            <MudTd DataLabel="PaletGo">@context.PALLET_GO</MudTd>
        </RowTemplate>
        <GroupFooterTemplate>
            <MudTh Class="mud-table-cell-custom-group mud-table-cell-custom-group-footer" colspan="5">Total Quantity: @context.Items.Sum((e) => e.DN_QTY)</MudTh>
        </GroupFooterTemplate>
    </MudTable>





    @*
        <MudTable Items="@Elements" FixedHeader="@fixed_header" FixedFooter="@fixed_footer" Height="@(fixed_header || fixed_footer ?"600px":"")" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<BOOKING_NOTE_ITEMS,bool>(FilterFunc)" @bind-SelectedItem="selectedItem">
            <ToolBarContent>
                <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.FileDownload" Style="background-color: mediumseagreen; color: white; width: 80px; height: 30px;">
                    Excel
                </MudButton>
                <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.FileDownload" Style="background-color: orangered; color: white; width: 80px; height: 30px;">
                    PDF
                </MudButton>
                <MudToolBarSpacer />
                <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            </ToolBarContent>

            <HeaderContent>
                <MudTh>SEQ_NO</MudTh>
                <MudTh>BK_NO</MudTh>
                <MudTh>DN_NO</MudTh>
                <MudTh>DN_SEQ</MudTh>
                <MudTh>ITEM_CODE</MudTh>
                <MudTh>ITEM_NAME</MudTh>
                <MudTh>DN_QTY</MudTh>
                <MudTh>DN_UM</MudTh>
                <MudTh>CUSTOMER_CODE</MudTh>
                <MudTh>PACKETING_CODE</MudTh>
                <MudTh>CUSTOMER_ITEM</MudTh>
                <MudTh>SUBCUSTOMER_CODE</MudTh>
                <MudTh>BOOKING_MODEL</MudTh>
                <MudTh>REQUEST_DATE</MudTh>
                <MudTh>PALLET_GO</MudTh>
                <MudTh>STATUS_GO</MudTh>
                <MudTh>CREATED_DATE</MudTh>
                <MudTh>UPDATE_DATE</MudTh>
            </HeaderContent>
            <RowTemplate>

                <MudTd DataLabel="SEQ_NO">@context.SEQ_NO</MudTd>
                <MudTd DataLabel="BK_NO">@context.BK_NO</MudTd>
                <MudTd DataLabel="DN_NO">@context.DN_NO</MudTd>
                <MudTd DataLabel="DN_SEQ">@context.DN_SEQ</MudTd>
                <MudTd DataLabel="ITEM_CODE">@context.ITEM_CODE</MudTd>
                <MudTd DataLabel="ITEM_NAME">@context.ITEM_NAME</MudTd>
                <MudTd DataLabel="DN_QTY">@context.DN_QTY</MudTd>
                <MudTd DataLabel="DN_UM">@context.DN_UM</MudTd>
                <MudTd DataLabel="CUSTOMER_CODE">@context.CUSTOMER_CODE</MudTd>
                <MudTd DataLabel="PACKETING_CODE">@context.PACKETING_CODE</MudTd>
                <MudTd DataLabel="CUST_ITEM_CODE">@context.CUST_ITEM_CODE</MudTd>
                <MudTd DataLabel="SUB_CUSTOMER_CODE">@context.SUB_CUSTOMER_CODE</MudTd>
                <MudTd DataLabel="BOOKING_MODEL_NO">@context.BOOKING_MODEL_NO</MudTd>
                <MudTd DataLabel="REQUEST_DATE">@context.REQUEST_DATE</MudTd>
                <MudTd DataLabel="PALLET_GO">@context.PALLET_GO</MudTd>
                <MudTd DataLabel="STATUS_GO">@context.STATUS_GO</MudTd>
                <MudTd DataLabel="CREATED_DATE">@context.CREATED_DATE</MudTd>
                <MudTd DataLabel="UPDATE_DATE_GO">@context.UPDATE_DATE_GO</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[]{10,20,50,100}" />

            </PagerContent>
        </MudTable>
    *@
}

@code {
    private bool _dense = true;
    private bool _multiSelect = true;

    private string mPageHeader = "Order Booking";
    private string msgAction = "Enter Palletcode";
    private string mPalletcode { get; set; } = "";
    private string mPackid { get; set; } = "";
    private string palletcode { get; set; }
    private bool dense = true;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = false;
    private bool fixed_header = true;
    private bool fixed_footer = true;
    private string searchString = "";
    private BOOKING_NOTE_ITEMS selectedItem = null;
    private HashSet<BOOKING_NOTE_ITEMS> selectedItems = new HashSet<BOOKING_NOTE_ITEMS>();
    private IEnumerable<BOOKING_NOTE_ITEMS> Elements = new List<BOOKING_NOTE_ITEMS>();

    public int elevation = 0;


    private TableGroupDefinition<BOOKING_NOTE_ITEMS> _groupDefinition = new()
    {
        GroupName = "Order",
        Indentation = false,
        Expandable = true,
        IsInitiallyExpanded = false,
        Selector = (e) => e.SO_NO
    };

    protected override async Task OnInitializedAsync()
    {
        WgcService objCS = new WgcService();
        //Elements = await Task.Run(() => objCS.GetReceivingOrdersbypallet(mPalletcode));
        Elements = await Task.Run(() => objCS.GetAllApiNewBookingnoteWgc());
    }


    private bool FilterFunc(BOOKING_NOTE_ITEMS element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.PALLET_GO.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.SO_NO.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.CUSTOMER_CODE.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.ITEM_CODE} {element.SEQ_NO} {element.DN_SEQ}".Contains(searchString))
            return true;
        return false;

    }

    private void SelectOrder()
    {
        var serializeOptions = new JsonSerializerOptions
        {
            PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
            WriteIndented = true
        };

        var strRES = selectedItems.OrderBy(x => x.SEQ_NO).Select(x => new { efidx = x.SEQ_NO, quantity = x.DN_QTY, packageid = x.DN_SEQ, materialcode = x.ITEM_CODE, palletno = x.PALLET_GO, sono = x.SO_NO, customer = x.CUSTOMER_CODE, lotno = x.LOT_NO, batchno = x.BATCH_NO, matematerialdescription = x.ITEM_NAME, unit = x.DN_UM, deliverydate = x.REQUEST_DATE }).ToList();

        //var strLON = selectedItems.OrderBy(x => x.SEQ_NO).Select(x => new { SEQ_NO = x.SEQ_NO, SO_NO = x.SO_NO, DN_SEQ = x.DN_SEQ, ITEM_CODE = x.ITEM_CODE, PALLET_GO = x.PALLET_GO, DN_QTY = x.DN_QTY }).ToList();

        //var jsonLON = JsonSerializer.Serialize(strLON, serializeOptions);

        var jsonRES = JsonSerializer.Serialize(strRES, serializeOptions);

        var iReturn = 0;
        var sReturn = "Call";



        ObjApiService.SetPickWgc(jsonRES, ref iReturn, ref sReturn);

        if (selectedItems.Count > 0)
        {
            if (iReturn == 0)
            {
                Snackbar.Add(sReturn, Severity.Error);
            }
            else
            {

                ObjErpService.UpdateNewBooking_notebylist(selectedItems.ToList());


                Snackbar.Add("Order picking created", Severity.Success);









            }
        }
        else
        {
            Snackbar.Add("Please select order picking", Severity.Warning);
        }
    }

}

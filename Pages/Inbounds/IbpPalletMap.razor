@page "/inb/palletmap"
@using GoWMS.Server.Data
@using GoWMS.Server.Controllers
@using GoWMS.Server.Models
@using GoWMS.Server.Models.Api
@using GoWMS.Server.Models.Mas

@inject ErpService ObjErpService
@inject ErpApiService ObjErpApiService
@inject MasService ObjMasService

<MudText Typo="Typo.h6" Color="Color.Primary">@mPageHeader</MudText>

<MudGrid>
    <MudItem xs="12" sm="6" md="4">
        <MudTextField @bind-Value="palletcode" @onkeyup="DoTheThing" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Filled.QrCodeScanner" AdornmentColor="Color.Secondary" />
    </MudItem>
    <MudItem xs="12" sm="6" md="4">
        @if (elevation == 0) //Defult
        {
            <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined">@msgAction</MudAlert>
        }
        else @if (elevation == 1) //Info
   {
    <MudAlert Severity="Severity.Info" Variant="Variant.Outlined">@msgAction</MudAlert>
}
else if (elevation == 2) //Success
{
    <MudAlert Severity="Severity.Success" Variant="Variant.Outlined">@msgAction</MudAlert>
}
else if (elevation == 3) // Warning
{
    <MudAlert Severity="Severity.Warning" Variant="Variant.Outlined">@msgAction</MudAlert>
}
else if (elevation == 4) // Error
{
    <MudAlert Severity="Severity.Error" Variant="Variant.Outlined">@msgAction</MudAlert>
}
    </MudItem>
</MudGrid>
@*<MudText Typo="Typo.h6" Color="Color.Secondary" Class="mb-4">Master Pallet : [ @mPalletcode ]</MudText>
    <MudSkeleton Animation="Animation.False" />*@
@*<MudText Typo="Typo.h6" Color="Color.Info" Class="mb-4">PackID : [ @mPackid ]</MudText>*@
@if (Elements == null)
{
    // <p><em>Loading...</em></p>
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
}
else
{
    <MudTable Items="@Elements" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<Api_Receivingorders_Go,bool>(FilterFunc)" @bind-SelectedItem="selectedItem">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Master Pallet : [ @mPalletcode ]</MudText>
            <MudToolBarSpacer />
            <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>MasterPallet</MudTh>
            <MudTh>PackID</MudTh>
            <MudTh>Material</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>Qty</MudTh>
            <MudTh>Unit</MudTh>
            <MudTh>Action</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="MasterPallet">@context.Lpncode</MudTd>
            <MudTd DataLabel="PackID">@context.Package_Id</MudTd>
            <MudTd DataLabel="Material">@context.Material_Code</MudTd>
            <MudTd DataLabel="Description">@context.Material_Description</MudTd>
            <MudTd DataLabel="Qty">@context.Gr_Quantity</MudTd>
            <MudTd DataLabel="Unit">@context.Unit</MudTd>
            <MudTd DataLabel="">
                <MudFab @onclick="@(()=>DeleteMap(@context.Package_Id))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small" />
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{10,20,50,100}" />
        </PagerContent>
    </MudTable>
}

@code {
    private string mPageHeader = "Master Mapping";
    private string msgAction = "Enter MasterPallet";
    private string mPalletcode { get; set; } = "";
    private string mPackid { get; set; } = "";
    private string palletcode { get; set; }
    private bool dense = true;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = false;
    private string searchString = "";
    private Api_Receivingorders_Go selectedItem = null;
    private HashSet<Api_Receivingorders_Go> selectedItems = new HashSet<Api_Receivingorders_Go>();
    private IEnumerable<Api_Receivingorders_Go> Elements = new List<Api_Receivingorders_Go>();

    private IEnumerable<Api_Receivingorders_Go> MapPalletItem = new List<Api_Receivingorders_Go>();

    private IEnumerable<Mas_Pallet_Go> MasterPallets = new List<Mas_Pallet_Go>();

    public int elevation = 0;

    protected override async Task OnInitializedAsync()
    {
        ErpApiService objCS = new ErpApiService();
        Elements = await Task.Run(() => objCS.GetAllApiRecevingorderGosypallet(mPalletcode));
        MasterPallets = ObjMasService.GetAllMasterPallets();
        //Elements = await Task.Run(() => objCS.GetReceivivgOrder());
    }

    private void setstr(string str)
    {
        if (mPalletcode.Length <= 0)
        {
            var allCorrect = MasterPallets.Where(a => a.Palletno == str).ToList();

            if (allCorrect.ToList().Count > 0)
            {
                mPalletcode = str;
                msgAction = "Enter PackID";
                elevation = 1;
            }
            else
            {
                mPalletcode = "";
                elevation = 4;
                msgAction = "Masterpallet find not found";
            }
        }
        else
        {
            if (str == mPalletcode)
            {
                if (Elements.ToList().Count > 0)
                {
                    elevation = 2;
                    msgAction = "Mapping successfully";
                    //ObjErpApiService.UpdateReceivingOrderbypallet(mPalletcode);
                    ObjErpApiService.SetMappedPallet(mPalletcode);
                    mPalletcode = "";
                }
                else
                {
                    elevation = 3;
                    msgAction = "Please enter PackID";
                }
            }
            else
            {
                mPackid = str;
                MapPalletItem = null;
                MapPalletItem = ObjErpService.GetErpMatReceivingOrdersByTag(mPackid);
                if (MapPalletItem.ToList().Count>0)
                {
                    ObjErpApiService.InsertReceivingOrderbypack(MapPalletItem.ToList(), mPalletcode);

                    //ObjErpApiService.UpdateReceivingOrderbypack(mPalletcode, mPackid);
                    msgAction = "Enter PackID or Pallet code for complete";
                    elevation = 1;
                }
                else
                {

                }



            }
        }

        ErpApiService objGR = new ErpApiService();
        Elements = objGR.GetAllApiRecevingorderGosypallet(mPalletcode);

    }

    private string stxtInput { get; set; }

    private void DoTheThing(KeyboardEventArgs eventArgs)
    {
        if (eventArgs.Key == "Enter")        // fire on enter
        {
            //Console.WriteLine("Done the thing: " + MyValue);
            //stxtInput = MyValue;
            setstr(palletcode);
            palletcode = "";
        }
    }

    private bool FilterFunc(Api_Receivingorders_Go element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Package_Id.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Material_Code.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Material_Description} {element.Job_Code} {element.Document_Number}".Contains(searchString))
            return true;
        return false;
    }

    private void DeleteMap(string pack)
    {
        msgAction = "Cancle successfully";
        ObjErpApiService.CancelReceivingOrderbypack(mPalletcode, pack);


        ErpApiService objGR = new ErpApiService();
        Elements = objGR.GetAllApiRecevingorderGosypallet(mPalletcode);

    }

}

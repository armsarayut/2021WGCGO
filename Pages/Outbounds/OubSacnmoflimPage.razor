@page "/oub/moflim"
@page "/oub/moflim/{mocode}"
@using GoWMS.Server.Data
@using GoWMS.Server.Controllers
@using GoWMS.Server.Models
@using GoWMS.Server.Models.Api


@if (Elements == null)
{
    //<p><em>Loading...</em></p>
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
}
else
{
    <MudText Typo="Typo.h6" Color="Color.Primary"> @pageheader @Mocode </MudText>
    <MudTable Items="@Elements" MultiSelection="true" Breakpoint="Breakpoint.Sm" 
              CustomHeader="true" CustomFooter="true" HeaderClass="table-head-bordered" FooterClass="table-foot-bordered"
              FixedHeader="@fixed_header" FixedFooter="@fixed_footer" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<Api_Deliveryorder_Go,bool>(FilterFunc)" @bind-SelectedItem="selectedItem" SortLabel="Sort By">
        
        <ToolBarContent>
            <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Save" Style="background-color: red; color: white; width: 80px; height: 30px;">
                Save
            </MudButton>
            <MudToolBarSpacer />
            <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>

        <HeaderContent>
            <MudTHeadRow IsCheckable="true">
                <MudTh>Customer</MudTh>
                <MudTh>Name</MudTh>
                <MudTh>Material</MudTh>
                <MudTh>Description</MudTh>
                <MudTh>Product</MudTh>
                <MudTh>ProductName</MudTh>
                <MudTh>Quantity</MudTh>
                <MudTh>Unit</MudTh>
                <MudTh>Job</MudTh>
                <MudTh>JobCode</MudTh>

            </MudTHeadRow>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Customer">@context.Customer_Code</MudTd>
            <MudTd DataLabel="Name">@context.Customer_Description</MudTd>
            <MudTd DataLabel="Material">@context.Material_Code</MudTd>
            <MudTd DataLabel="Description">@context.Material_Description</MudTd>
            <MudTd DataLabel="Product">@context.Finished_Product</MudTd>
            <MudTd DataLabel="ProductName">@context.Finished_Product_Description</MudTd>
            <MudTd DataLabel="Quantity">@context.Quantity</MudTd>
            <MudTd DataLabel="Unit">@context.Unit</MudTd>
            <MudTd DataLabel="Job">@context.Job</MudTd>
            <MudTd DataLabel="Jobcode">@context.Job_Code</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{10,20,50,100}" />
        </PagerContent>
    </MudTable>
}


@code {

    [Parameter]
    public string Mocode { get; set; }
    private bool _dense = false;
    private bool _multiSelect = true;

    IEnumerable<int> pageSizeOptions = new int[] { 10, 20, 30, 50, 100 };

    private readonly string pageheader = "MO : ";
    private string msgAction = "Enter Palletcode";
    private string mPalletcode { get; set; } = "";
    private string mPackid { get; set; } = "";
    private string palletcode { get; set; }
    private bool dense = true;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = false;
    private bool fixed_header = true;
    private bool fixed_footer = true;
    private string searchString = "";
    private Api_Deliveryorder_Go selectedItem = null;
    private HashSet<Api_Deliveryorder_Go> selectedItems = new HashSet<Api_Deliveryorder_Go>();
    private IEnumerable<Api_Deliveryorder_Go> Elements = new List<Api_Deliveryorder_Go>();
    public int elevation = 0;

    protected override async Task OnInitializedAsync()
    {
        ErpApiService objCS = new ErpApiService();
        //Elements = await Task.Run(() => objCS.GetReceivingOrdersbypallet(mPalletcode));
        Elements = await Task.Run(() => objCS.GetAllApiDeliveryorderByMo(Mocode));
    }

    private void setstr(string str)
    {
        //if (mPalletcode.Length <= 0)
        //{
        //    mPalletcode = str;
        //    msgAction = "Enter Pack ID";
        //    elevation = 3;
        //}
        //else
        //{
        //    if (str == mPalletcode)
        //    {
        //        elevation = 2;
        //        msgAction = "Mapping successfully";
        //        ObjCustomService.UpdateReceivingOrderbypallet(mPalletcode);
        //        mPalletcode = "";
        //    }
        //    else
        //    {
        //        mPackid = str;
        //        ObjCustomService.UpdateReceivingOrderbypack(mPalletcode, mPackid);
        //    }
        //}
        //CustomerService objGR = new CustomerService();
        //Elements = objGR.GetReceivingOrdersbypallet(mPalletcode);
    }

    private string stxtInput { get; set; }

    private void DoTheThing(KeyboardEventArgs eventArgs)
    {
        if (eventArgs.Key == "Enter")        // fire on enter
        {
            setstr(palletcode);
            palletcode = "";
        }
    }

    private bool FilterFunc(Api_Deliveryorder_Go element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Mo_Barcode.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Job.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Material_Code.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }




}